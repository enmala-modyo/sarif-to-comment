{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2021-42550",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "logback: remote code execution through JNDI call from within its configuration file"
              },
              "fullDescription": {
                "text": "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42550",
              "help": {
                "text": "Vulnerability CVE-2021-42550\nSeverity: MEDIUM\nPackage: ch.qos.logback:logback-core\nFixed Version: 1.2.9\nLink: [CVE-2021-42550](https://avd.aquasec.com/nvd/cve-2021-42550)\nIn logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
                "markdown": "**Vulnerability CVE-2021-42550**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ch.qos.logback:logback-core|1.2.9|[CVE-2021-42550](https://avd.aquasec.com/nvd/cve-2021-42550)|\n\nIn logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-25649",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jackson-databind: FasterXML DOMDeserializer insecure entity expansion is vulnerable to XML external entity (XXE)"
              },
              "fullDescription": {
                "text": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-25649",
              "help": {
                "text": "Vulnerability CVE-2020-25649\nSeverity: HIGH\nPackage: com.fasterxml.jackson.core:jackson-databind\nFixed Version: 2.6.7.4, 2.9.10.7, 2.10.5.1\nLink: [CVE-2020-25649](https://avd.aquasec.com/nvd/cve-2020-25649)\nA flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
                "markdown": "**Vulnerability CVE-2020-25649**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|com.fasterxml.jackson.core:jackson-databind|2.6.7.4, 2.9.10.7, 2.10.5.1|[CVE-2020-25649](https://avd.aquasec.com/nvd/cve-2020-25649)|\n\nA flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-36518",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jackson-databind: denial of service via a large depth of nested objects"
              },
              "fullDescription": {
                "text": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-36518",
              "help": {
                "text": "Vulnerability CVE-2020-36518\nSeverity: HIGH\nPackage: com.fasterxml.jackson.core:jackson-databind\nFixed Version: 2.12.6.1, 2.13.2.1\nLink: [CVE-2020-36518](https://avd.aquasec.com/nvd/cve-2020-36518)\njackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
                "markdown": "**Vulnerability CVE-2020-36518**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|com.fasterxml.jackson.core:jackson-databind|2.12.6.1, 2.13.2.1|[CVE-2020-36518](https://avd.aquasec.com/nvd/cve-2020-36518)|\n\njackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-42003",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jackson-databind: deep wrapper array nesting wrt UNWRAP_SINGLE_VALUE_ARRAYS"
              },
              "fullDescription": {
                "text": "In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-42003",
              "help": {
                "text": "Vulnerability CVE-2022-42003\nSeverity: HIGH\nPackage: com.fasterxml.jackson.core:jackson-databind\nFixed Version: 2.12.7.1, 2.13.4.1\nLink: [CVE-2022-42003](https://avd.aquasec.com/nvd/cve-2022-42003)\nIn FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1",
                "markdown": "**Vulnerability CVE-2022-42003**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|com.fasterxml.jackson.core:jackson-databind|2.12.7.1, 2.13.4.1|[CVE-2022-42003](https://avd.aquasec.com/nvd/cve-2022-42003)|\n\nIn FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-42004",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jackson-databind: use of deeply nested arrays"
              },
              "fullDescription": {
                "text": "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-42004",
              "help": {
                "text": "Vulnerability CVE-2022-42004\nSeverity: HIGH\nPackage: com.fasterxml.jackson.core:jackson-databind\nFixed Version: 2.12.7.1, 2.13.4\nLink: [CVE-2022-42004](https://avd.aquasec.com/nvd/cve-2022-42004)\nIn FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
                "markdown": "**Vulnerability CVE-2022-42004**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|com.fasterxml.jackson.core:jackson-databind|2.12.7.1, 2.13.4|[CVE-2022-42004](https://avd.aquasec.com/nvd/cve-2022-42004)|\n\nIn FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-10237",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "guava: Unbounded memory allocation in AtomicDoubleArray and CompoundOrdering classes allow remote attackers to cause a denial of service"
              },
              "fullDescription": {
                "text": "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-10237",
              "help": {
                "text": "Vulnerability CVE-2018-10237\nSeverity: MEDIUM\nPackage: com.google.guava:guava\nFixed Version: 24.1.1-jre, 24.1.1-android\nLink: [CVE-2018-10237](https://avd.aquasec.com/nvd/cve-2018-10237)\nUnbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",
                "markdown": "**Vulnerability CVE-2018-10237**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|com.google.guava:guava|24.1.1-jre, 24.1.1-android|[CVE-2018-10237](https://avd.aquasec.com/nvd/cve-2018-10237)|\n\nUnbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8908",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "guava: local information disclosure via temporary directory created with unsafe permissions"
              },
              "fullDescription": {
                "text": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime\u0026#39;s java.io.tmpdir system property to point to a location whose permissions are appropriately configured."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8908",
              "help": {
                "text": "Vulnerability CVE-2020-8908\nSeverity: LOW\nPackage: com.google.guava:guava\nFixed Version: 30.0\nLink: [CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)\nA temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
                "markdown": "**Vulnerability CVE-2020-8908**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|com.google.guava:guava|30.0|[CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)|\n\nA temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-23463",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "h2database: XXE injection vulnerability"
              },
              "fullDescription": {
                "text": "The package com.h2database:h2 from 1.4.198 and before 2.0.202 are vulnerable to XML External Entity (XXE) Injection via the org.h2.jdbc.JdbcSQLXML class object, when it receives parsed string data from org.h2.jdbc.JdbcResultSet.getSQLXML() method. If it executes the getSource() method when the parameter is DOMSource.class it will trigger the vulnerability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23463",
              "help": {
                "text": "Vulnerability CVE-2021-23463\nSeverity: CRITICAL\nPackage: com.h2database:h2\nFixed Version: 2.0.202\nLink: [CVE-2021-23463](https://avd.aquasec.com/nvd/cve-2021-23463)\nThe package com.h2database:h2 from 1.4.198 and before 2.0.202 are vulnerable to XML External Entity (XXE) Injection via the org.h2.jdbc.JdbcSQLXML class object, when it receives parsed string data from org.h2.jdbc.JdbcResultSet.getSQLXML() method. If it executes the getSource() method when the parameter is DOMSource.class it will trigger the vulnerability.",
                "markdown": "**Vulnerability CVE-2021-23463**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|com.h2database:h2|2.0.202|[CVE-2021-23463](https://avd.aquasec.com/nvd/cve-2021-23463)|\n\nThe package com.h2database:h2 from 1.4.198 and before 2.0.202 are vulnerable to XML External Entity (XXE) Injection via the org.h2.jdbc.JdbcSQLXML class object, when it receives parsed string data from org.h2.jdbc.JdbcResultSet.getSQLXML() method. If it executes the getSource() method when the parameter is DOMSource.class it will trigger the vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-42392",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "h2: Remote Code Execution in Console"
              },
              "fullDescription": {
                "text": "The org.h2.util.JdbcUtils.getConnection method of the H2 database takes as parameters the class name of the driver and URL of the database. An attacker may pass a JNDI driver name and a URL leading to a LDAP or RMI servers, causing remote code execution. This can be exploited through various attack vectors, most notably through the H2 Console which leads to unauthenticated remote code execution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42392",
              "help": {
                "text": "Vulnerability CVE-2021-42392\nSeverity: CRITICAL\nPackage: com.h2database:h2\nFixed Version: 2.0.206\nLink: [CVE-2021-42392](https://avd.aquasec.com/nvd/cve-2021-42392)\nThe org.h2.util.JdbcUtils.getConnection method of the H2 database takes as parameters the class name of the driver and URL of the database. An attacker may pass a JNDI driver name and a URL leading to a LDAP or RMI servers, causing remote code execution. This can be exploited through various attack vectors, most notably through the H2 Console which leads to unauthenticated remote code execution.",
                "markdown": "**Vulnerability CVE-2021-42392**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|com.h2database:h2|2.0.206|[CVE-2021-42392](https://avd.aquasec.com/nvd/cve-2021-42392)|\n\nThe org.h2.util.JdbcUtils.getConnection method of the H2 database takes as parameters the class name of the driver and URL of the database. An attacker may pass a JNDI driver name and a URL leading to a LDAP or RMI servers, causing remote code execution. This can be exploited through various attack vectors, most notably through the H2 Console which leads to unauthenticated remote code execution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-23221",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "h2: Loading of custom classes from remote servers through JNDI"
              },
              "fullDescription": {
                "text": "H2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23221",
              "help": {
                "text": "Vulnerability CVE-2022-23221\nSeverity: CRITICAL\nPackage: com.h2database:h2\nFixed Version: 2.1.210\nLink: [CVE-2022-23221](https://avd.aquasec.com/nvd/cve-2022-23221)\nH2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392.",
                "markdown": "**Vulnerability CVE-2022-23221**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|com.h2database:h2|2.1.210|[CVE-2022-23221](https://avd.aquasec.com/nvd/cve-2022-23221)|\n\nH2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-45868",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The web-based admin console in H2 Database Engine through 2.1.214 can  ..."
              },
              "fullDescription": {
                "text": "The web-based admin console in H2 Database Engine through 2.1.214 can be started via the CLI with the argument -webAdminPassword, which allows the user to specify the password in cleartext for the web admin console. Consequently, a local user (or an attacker that has obtained local access through some means) would be able to discover the password by listing processes and their arguments. NOTE: the vendor states \u0026#34;This is not a vulnerability of H2 Console ... Passwords should never be passed on the command line and every qualified DBA or system administrator is expected to know that.\u0026#34;"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-45868",
              "help": {
                "text": "Vulnerability CVE-2022-45868\nSeverity: HIGH\nPackage: com.h2database:h2\nFixed Version: \nLink: [CVE-2022-45868](https://avd.aquasec.com/nvd/cve-2022-45868)\nThe web-based admin console in H2 Database Engine through 2.1.214 can be started via the CLI with the argument -webAdminPassword, which allows the user to specify the password in cleartext for the web admin console. Consequently, a local user (or an attacker that has obtained local access through some means) would be able to discover the password by listing processes and their arguments. NOTE: the vendor states \"This is not a vulnerability of H2 Console ... Passwords should never be passed on the command line and every qualified DBA or system administrator is expected to know that.\"",
                "markdown": "**Vulnerability CVE-2022-45868**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|com.h2database:h2||[CVE-2022-45868](https://avd.aquasec.com/nvd/cve-2022-45868)|\n\nThe web-based admin console in H2 Database Engine through 2.1.214 can be started via the CLI with the argument -webAdminPassword, which allows the user to specify the password in cleartext for the web admin console. Consequently, a local user (or an attacker that has obtained local access through some means) would be able to discover the password by listing processes and their arguments. NOTE: the vendor states \"This is not a vulnerability of H2 Console ... Passwords should never be passed on the command line and every qualified DBA or system administrator is expected to know that.\""
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-h376-j262-vhq6",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Improper Neutralization of Special Elements used in an OS Command (\u0026#39;OS Command Injection\u0026#39;)"
              },
              "fullDescription": {
                "text": "Improper Neutralization of Special Elements used in an OS Command (\u0026#39;OS Command Injection\u0026#39;) in com.h2database:h2."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-h376-j262-vhq6",
              "help": {
                "text": "Vulnerability GHSA-h376-j262-vhq6\nSeverity: UNKNOWN\nPackage: com.h2database:h2\nFixed Version: 2.0.206\nLink: [GHSA-h376-j262-vhq6](https://github.com/advisories/GHSA-h376-j262-vhq6)\nImproper Neutralization of Special Elements used in an OS Command ('OS Command Injection') in com.h2database:h2.",
                "markdown": "**Vulnerability GHSA-h376-j262-vhq6**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|com.h2database:h2|2.0.206|[GHSA-h376-j262-vhq6](https://github.com/advisories/GHSA-h376-j262-vhq6)|\n\nImproper Neutralization of Special Elements used in an OS Command ('OS Command Injection') in com.h2database:h2."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2020-11612",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "netty: compression/decompression codecs don\u0026#39;t enforce limits on buffer allocation sizes"
              },
              "fullDescription": {
                "text": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-11612",
              "help": {
                "text": "Vulnerability CVE-2020-11612\nSeverity: HIGH\nPackage: io.netty:netty-handler\nFixed Version: 4.1.46\nLink: [CVE-2020-11612](https://avd.aquasec.com/nvd/cve-2020-11612)\nThe ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder.",
                "markdown": "**Vulnerability CVE-2020-11612**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|io.netty:netty-handler|4.1.46|[CVE-2020-11612](https://avd.aquasec.com/nvd/cve-2020-11612)|\n\nThe ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37136",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "netty-codec: Bzip2Decoder doesn\u0026#39;t allow setting size restrictions for decompressed data"
              },
              "fullDescription": {
                "text": "The Bzip2 decompression decoder function doesn\u0026#39;t allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37136",
              "help": {
                "text": "Vulnerability CVE-2021-37136\nSeverity: HIGH\nPackage: io.netty:netty-codec\nFixed Version: 4.1.68.Final\nLink: [CVE-2021-37136](https://avd.aquasec.com/nvd/cve-2021-37136)\nThe Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack",
                "markdown": "**Vulnerability CVE-2021-37136**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|io.netty:netty-codec|4.1.68.Final|[CVE-2021-37136](https://avd.aquasec.com/nvd/cve-2021-37136)|\n\nThe Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37137",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "netty-codec: SnappyFrameDecoder doesn\u0026#39;t restrict chunk length and may buffer skippable chunks in an unnecessary way"
              },
              "fullDescription": {
                "text": "The Snappy frame decoder function doesn\u0026#39;t restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37137",
              "help": {
                "text": "Vulnerability CVE-2021-37137\nSeverity: HIGH\nPackage: io.netty:netty-codec\nFixed Version: 4.1.68.Final\nLink: [CVE-2021-37137](https://avd.aquasec.com/nvd/cve-2021-37137)\nThe Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.",
                "markdown": "**Vulnerability CVE-2021-37137**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|io.netty:netty-codec|4.1.68.Final|[CVE-2021-37137](https://avd.aquasec.com/nvd/cve-2021-37137)|\n\nThe Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-21290",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "netty: Information disclosure via the local system temporary directory"
              },
              "fullDescription": {
                "text": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty\u0026#39;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \u0026#34;File.createTempFile\u0026#34; on unix-like systems creates a random file, but, by default will create this file with the permissions \u0026#34;-rw-r--r--\u0026#34;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty\u0026#39;s \u0026#34;AbstractDiskHttpData\u0026#34; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \u0026#34;java.io.tmpdir\u0026#34; when you start the JVM or use \u0026#34;DefaultHttpDataFactory.setBaseDir(...)\u0026#34; to set the directory to something that is only readable by the current user."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-21290",
              "help": {
                "text": "Vulnerability CVE-2021-21290\nSeverity: MEDIUM\nPackage: io.netty:netty-handler\nFixed Version: 4.1.59.Final\nLink: [CVE-2021-21290](https://avd.aquasec.com/nvd/cve-2021-21290)\nNetty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026 clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
                "markdown": "**Vulnerability CVE-2021-21290**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|io.netty:netty-handler|4.1.59.Final|[CVE-2021-21290](https://avd.aquasec.com/nvd/cve-2021-21290)|\n\nNetty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026 clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-21409",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "netty: Request smuggling via content-length header"
              },
              "fullDescription": {
                "text": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-21409",
              "help": {
                "text": "Vulnerability CVE-2021-21409\nSeverity: MEDIUM\nPackage: io.netty:netty-handler\nFixed Version: 4.1.61.Final\nLink: [CVE-2021-21409](https://avd.aquasec.com/nvd/cve-2021-21409)\nNetty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026 clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final.",
                "markdown": "**Vulnerability CVE-2021-21409**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|io.netty:netty-handler|4.1.61.Final|[CVE-2021-21409](https://avd.aquasec.com/nvd/cve-2021-21409)|\n\nNetty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026 clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-24823",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "netty: world readable temporary file containing sensitive data"
              },
              "fullDescription": {
                "text": "Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty\u0026#39;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one\u0026#39;s own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24823",
              "help": {
                "text": "Vulnerability CVE-2022-24823\nSeverity: MEDIUM\nPackage: io.netty:netty-handler\nFixed Version: 4.1.77.Final\nLink: [CVE-2022-24823](https://avd.aquasec.com/nvd/cve-2022-24823)\nNetty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one's own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.",
                "markdown": "**Vulnerability CVE-2022-24823**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|io.netty:netty-handler|4.1.77.Final|[CVE-2022-24823](https://avd.aquasec.com/nvd/cve-2022-24823)|\n\nNetty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one's own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-17495",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Cross-site scripting in Swagger-UI"
              },
              "fullDescription": {
                "text": "A Cascading Style Sheets (CSS) injection vulnerability in Swagger UI before 3.23.11 allows attackers to use the Relative Path Overwrite (RPO) technique to perform CSS-based input field value exfiltration, such as exfiltration of a CSRF token value. In other words, this product intentionally allows the embedding of untrusted JSON data from remote servers, but it was not previously known that \u0026lt;style\u0026gt;@import within the JSON data was a functional attack method."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-17495",
              "help": {
                "text": "Vulnerability CVE-2019-17495\nSeverity: CRITICAL\nPackage: io.springfox:springfox-swagger-ui\nFixed Version: 2.10.0\nLink: [CVE-2019-17495](https://avd.aquasec.com/nvd/cve-2019-17495)\nA Cascading Style Sheets (CSS) injection vulnerability in Swagger UI before 3.23.11 allows attackers to use the Relative Path Overwrite (RPO) technique to perform CSS-based input field value exfiltration, such as exfiltration of a CSRF token value. In other words, this product intentionally allows the embedding of untrusted JSON data from remote servers, but it was not previously known that \u003cstyle\u003e@import within the JSON data was a functional attack method.",
                "markdown": "**Vulnerability CVE-2019-17495**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|io.springfox:springfox-swagger-ui|2.10.0|[CVE-2019-17495](https://avd.aquasec.com/nvd/cve-2019-17495)|\n\nA Cascading Style Sheets (CSS) injection vulnerability in Swagger UI before 3.23.11 allows attackers to use the Relative Path Overwrite (RPO) technique to perform CSS-based input field value exfiltration, such as exfiltration of a CSRF token value. In other words, this product intentionally allows the embedding of untrusted JSON data from remote servers, but it was not previously known that \u003cstyle\u003e@import within the JSON data was a functional attack method."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-15250",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "junit4: TemporaryFolder is shared between all users across system which could result in information disclosure"
              },
              "fullDescription": {
                "text": "In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system\u0026#39;s temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-15250",
              "help": {
                "text": "Vulnerability CVE-2020-15250\nSeverity: MEDIUM\nPackage: junit:junit\nFixed Version: 4.13.1\nLink: [CVE-2020-15250](https://avd.aquasec.com/nvd/cve-2020-15250)\nIn JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.",
                "markdown": "**Vulnerability CVE-2020-15250**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|junit:junit|4.13.1|[CVE-2020-15250](https://avd.aquasec.com/nvd/cve-2020-15250)|\n\nIn JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-2934",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql-connector-java: allows unauthenticated attacker with network access via multiple protocols to compromise MySQL Connectors which could result in unauthorized update, insert or delete"
              },
              "fullDescription": {
                "text": "Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.19 and prior and 5.1.48 and prior. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data as well as unauthorized read access to a subset of MySQL Connectors accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of MySQL Connectors. CVSS 3.0 Base Score 5.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-2934",
              "help": {
                "text": "Vulnerability CVE-2020-2934\nSeverity: MEDIUM\nPackage: mysql:mysql-connector-java\nFixed Version: 5.1.49, 8.0.20\nLink: [CVE-2020-2934](https://avd.aquasec.com/nvd/cve-2020-2934)\nVulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.19 and prior and 5.1.48 and prior. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data as well as unauthorized read access to a subset of MySQL Connectors accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of MySQL Connectors. CVSS 3.0 Base Score 5.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L).",
                "markdown": "**Vulnerability CVE-2020-2934**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mysql:mysql-connector-java|5.1.49, 8.0.20|[CVE-2020-2934](https://avd.aquasec.com/nvd/cve-2020-2934)|\n\nVulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.19 and prior and 5.1.48 and prior. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data as well as unauthorized read access to a subset of MySQL Connectors accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of MySQL Connectors. CVSS 3.0 Base Score 5.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-2471",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql-connector-java: unauthorized access to critical"
              },
              "fullDescription": {
                "text": "Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.26 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all MySQL Connectors accessible data and unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of MySQL Connectors. CVSS 3.1 Base Score 5.9 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:H)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-2471",
              "help": {
                "text": "Vulnerability CVE-2021-2471\nSeverity: MEDIUM\nPackage: mysql:mysql-connector-java\nFixed Version: 8.0.27\nLink: [CVE-2021-2471](https://avd.aquasec.com/nvd/cve-2021-2471)\nVulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.26 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all MySQL Connectors accessible data and unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of MySQL Connectors. CVSS 3.1 Base Score 5.9 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:H).",
                "markdown": "**Vulnerability CVE-2021-2471**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mysql:mysql-connector-java|8.0.27|[CVE-2021-2471](https://avd.aquasec.com/nvd/cve-2021-2471)|\n\nVulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.26 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all MySQL Connectors accessible data and unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of MySQL Connectors. CVSS 3.1 Base Score 5.9 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:H)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-21363",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql-connector-java: Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors"
              },
              "fullDescription": {
                "text": "Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.27 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.1 Base Score 6.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21363",
              "help": {
                "text": "Vulnerability CVE-2022-21363\nSeverity: MEDIUM\nPackage: mysql:mysql-connector-java\nFixed Version: 8.0.28\nLink: [CVE-2022-21363](https://avd.aquasec.com/nvd/cve-2022-21363)\nVulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.27 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.1 Base Score 6.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H).",
                "markdown": "**Vulnerability CVE-2022-21363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mysql:mysql-connector-java|8.0.28|[CVE-2022-21363](https://avd.aquasec.com/nvd/cve-2022-21363)|\n\nVulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.27 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.1 Base Score 6.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-45105",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "log4j-core: DoS in log4j 2.x with Thread Context Map (MDC) input data contains a recursive lookup and context lookup pattern"
              },
              "fullDescription": {
                "text": "Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-45105",
              "help": {
                "text": "Vulnerability CVE-2021-45105\nSeverity: MEDIUM\nPackage: org.apache.logging.log4j:log4j-api\nFixed Version: 2.12.3, 2.17.0\nLink: [CVE-2021-45105](https://avd.aquasec.com/nvd/cve-2021-45105)\nApache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1.",
                "markdown": "**Vulnerability CVE-2021-45105**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.apache.logging.log4j:log4j-api|2.12.3, 2.17.0|[CVE-2021-45105](https://avd.aquasec.com/nvd/cve-2021-45105)|\n\nApache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-13934",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tomcat: OutOfMemoryException caused by HTTP/2 connection leak could lead to DoS"
              },
              "fullDescription": {
                "text": "An h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-13934",
              "help": {
                "text": "Vulnerability CVE-2020-13934\nSeverity: HIGH\nPackage: org.apache.tomcat.embed:tomcat-embed-core\nFixed Version: 8.5.57, 9.0.37\nLink: [CVE-2020-13934](https://avd.aquasec.com/nvd/cve-2020-13934)\nAn h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service.",
                "markdown": "**Vulnerability CVE-2020-13934**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.apache.tomcat.embed:tomcat-embed-core|8.5.57, 9.0.37|[CVE-2020-13934](https://avd.aquasec.com/nvd/cve-2020-13934)|\n\nAn h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-17527",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tomcat: HTTP/2 request header mix-up"
              },
              "fullDescription": {
                "text": "While investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-17527",
              "help": {
                "text": "Vulnerability CVE-2020-17527\nSeverity: HIGH\nPackage: org.apache.tomcat.embed:tomcat-embed-core\nFixed Version: 8.5.60, 9.0.40, 10.0.2\nLink: [CVE-2020-17527](https://avd.aquasec.com/nvd/cve-2020-17527)\nWhile investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests.",
                "markdown": "**Vulnerability CVE-2020-17527**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.apache.tomcat.embed:tomcat-embed-core|8.5.60, 9.0.40, 10.0.2|[CVE-2020-17527](https://avd.aquasec.com/nvd/cve-2020-17527)|\n\nWhile investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-9484",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tomcat: deserialization flaw in session persistence storage leading to RCE"
              },
              "fullDescription": {
                "text": "When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\u0026#34;null\u0026#34; (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-9484",
              "help": {
                "text": "Vulnerability CVE-2020-9484\nSeverity: HIGH\nPackage: org.apache.tomcat.embed:tomcat-embed-core\nFixed Version: 7.0.104, 8.5.55, 9.0.35, 10.0.0-M5\nLink: [CVE-2020-9484](https://avd.aquasec.com/nvd/cve-2020-9484)\nWhen using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\"null\" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.",
                "markdown": "**Vulnerability CVE-2020-9484**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.apache.tomcat.embed:tomcat-embed-core|7.0.104, 8.5.55, 9.0.35, 10.0.0-M5|[CVE-2020-9484](https://avd.aquasec.com/nvd/cve-2020-9484)|\n\nWhen using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\"null\" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-25122",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tomcat: Request mix-up with h2c"
              },
              "fullDescription": {
                "text": "When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A\u0026#39;s request."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25122",
              "help": {
                "text": "Vulnerability CVE-2021-25122\nSeverity: HIGH\nPackage: org.apache.tomcat.embed:tomcat-embed-core\nFixed Version: 8.5.62, 9.0.42, 10.0.2\nLink: [CVE-2021-25122](https://avd.aquasec.com/nvd/cve-2021-25122)\nWhen responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A's request.",
                "markdown": "**Vulnerability CVE-2021-25122**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.apache.tomcat.embed:tomcat-embed-core|8.5.62, 9.0.42, 10.0.2|[CVE-2021-25122](https://avd.aquasec.com/nvd/cve-2021-25122)|\n\nWhen responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A's request."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-25329",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tomcat: Incomplete fix for CVE-2020-9484 (RCE via session persistence)"
              },
              "fullDescription": {
                "text": "The fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25329",
              "help": {
                "text": "Vulnerability CVE-2021-25329\nSeverity: HIGH\nPackage: org.apache.tomcat.embed:tomcat-embed-core\nFixed Version: 7.0.107, 8.5.61, 9.0.41\nLink: [CVE-2021-25329](https://avd.aquasec.com/nvd/cve-2021-25329)\nThe fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue.",
                "markdown": "**Vulnerability CVE-2021-25329**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.apache.tomcat.embed:tomcat-embed-core|7.0.107, 8.5.61, 9.0.41|[CVE-2021-25329](https://avd.aquasec.com/nvd/cve-2021-25329)|\n\nThe fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-24122",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tomcat: Information disclosure when using NTFS file system"
              },
              "fullDescription": {
                "text": "When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-24122",
              "help": {
                "text": "Vulnerability CVE-2021-24122\nSeverity: MEDIUM\nPackage: org.apache.tomcat.embed:tomcat-embed-websocket\nFixed Version: 10.0.0-M10, 9.0.40, 8.5.60, 7.0.107\nLink: [CVE-2021-24122](https://avd.aquasec.com/nvd/cve-2021-24122)\nWhen serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.",
                "markdown": "**Vulnerability CVE-2021-24122**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.apache.tomcat.embed:tomcat-embed-websocket|10.0.0-M10, 9.0.40, 8.5.60, 7.0.107|[CVE-2021-24122](https://avd.aquasec.com/nvd/cve-2021-24122)|\n\nWhen serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-43980",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": ": Apache Tomcat: Information disclosure"
              },
              "fullDescription": {
                "text": "The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-43980",
              "help": {
                "text": "Vulnerability CVE-2021-43980\nSeverity: LOW\nPackage: org.apache.tomcat.embed:tomcat-embed-websocket\nFixed Version: \nLink: [CVE-2021-43980](https://avd.aquasec.com/nvd/cve-2021-43980)\nThe simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.",
                "markdown": "**Vulnerability CVE-2021-43980**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|org.apache.tomcat.embed:tomcat-embed-websocket||[CVE-2021-43980](https://avd.aquasec.com/nvd/cve-2021-43980)|\n\nThe simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-13935",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tomcat: multiple requests with invalid payload length in a WebSocket frame could lead to DoS"
              },
              "fullDescription": {
                "text": "The payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-13935",
              "help": {
                "text": "Vulnerability CVE-2020-13935\nSeverity: HIGH\nPackage: org.apache.tomcat.embed:tomcat-embed-websocket\nFixed Version: 7.0.105, 8.5.57, 9.0.37, 10.0.2\nLink: [CVE-2020-13935](https://avd.aquasec.com/nvd/cve-2020-13935)\nThe payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service.",
                "markdown": "**Vulnerability CVE-2020-13935**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.apache.tomcat.embed:tomcat-embed-websocket|7.0.105, 8.5.57, 9.0.37, 10.0.2|[CVE-2020-13935](https://avd.aquasec.com/nvd/cve-2020-13935)|\n\nThe payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-15522",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "bouncycastle: Timing issue within the EC math library"
              },
              "fullDescription": {
                "text": "Bouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-15522",
              "help": {
                "text": "Vulnerability CVE-2020-15522\nSeverity: MEDIUM\nPackage: org.bouncycastle:bcprov-jdk15on\nFixed Version: 1.66\nLink: [CVE-2020-15522](https://avd.aquasec.com/nvd/cve-2020-15522)\nBouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures.",
                "markdown": "**Vulnerability CVE-2020-15522**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.bouncycastle:bcprov-jdk15on|1.66|[CVE-2020-15522](https://avd.aquasec.com/nvd/cve-2020-15522)|\n\nBouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-10683",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "dom4j: XML External Entity vulnerability in default SAX parser"
              },
              "fullDescription": {
                "text": "dom4j before 2.0.3 and 2.1.x before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-10683",
              "help": {
                "text": "Vulnerability CVE-2020-10683\nSeverity: CRITICAL\nPackage: org.dom4j:dom4j\nFixed Version: 2.0.3, 2.1.3\nLink: [CVE-2020-10683](https://avd.aquasec.com/nvd/cve-2020-10683)\ndom4j before 2.0.3 and 2.1.x before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.",
                "markdown": "**Vulnerability CVE-2020-10683**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.dom4j:dom4j|2.0.3, 2.1.3|[CVE-2020-10683](https://avd.aquasec.com/nvd/cve-2020-10683)|\n\ndom4j before 2.0.3 and 2.1.x before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-10693",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "hibernate-validator: Improper input validation in the interpolation of constraint error messages"
              },
              "fullDescription": {
                "text": "A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-10693",
              "help": {
                "text": "Vulnerability CVE-2020-10693\nSeverity: MEDIUM\nPackage: org.hibernate.validator:hibernate-validator\nFixed Version: 6.0.20.Final\nLink: [CVE-2020-10693](https://avd.aquasec.com/nvd/cve-2020-10693)\nA flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.",
                "markdown": "**Vulnerability CVE-2020-10693**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.hibernate.validator:hibernate-validator|6.0.20.Final|[CVE-2020-10693](https://avd.aquasec.com/nvd/cve-2020-10693)|\n\nA flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-25638",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "hibernate-core: SQL injection vulnerability when both hibernate.use_sql_comments and JPQL String literals are used"
              },
              "fullDescription": {
                "text": "A flaw was found in hibernate-core in versions prior to and including 5.4.23.Final. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SQL comments of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks. The highest threat from this vulnerability is to data confidentiality and integrity."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-25638",
              "help": {
                "text": "Vulnerability CVE-2020-25638\nSeverity: HIGH\nPackage: org.hibernate:hibernate-core\nFixed Version: 5.3.20.Final, 5.4.24.Final\nLink: [CVE-2020-25638](https://avd.aquasec.com/nvd/cve-2020-25638)\nA flaw was found in hibernate-core in versions prior to and including 5.4.23.Final. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SQL comments of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks. The highest threat from this vulnerability is to data confidentiality and integrity.",
                "markdown": "**Vulnerability CVE-2020-25638**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.hibernate:hibernate-core|5.3.20.Final, 5.4.24.Final|[CVE-2020-25638](https://avd.aquasec.com/nvd/cve-2020-25638)|\n\nA flaw was found in hibernate-core in versions prior to and including 5.4.23.Final. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SQL comments of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks. The highest threat from this vulnerability is to data confidentiality and integrity."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27772",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Temporary Directory Hijacking to Local Privilege Escalation Vulnerability in org.springframework.boot:spring-boot"
              },
              "fullDescription": {
                "text": "** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27772",
              "help": {
                "text": "Vulnerability CVE-2022-27772\nSeverity: HIGH\nPackage: org.springframework.boot:spring-boot\nFixed Version: 2.2.11.RELEASE\nLink: [CVE-2022-27772](https://avd.aquasec.com/nvd/cve-2022-27772)\n** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.",
                "markdown": "**Vulnerability CVE-2022-27772**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework.boot:spring-boot|2.2.11.RELEASE|[CVE-2022-27772](https://avd.aquasec.com/nvd/cve-2022-27772)|\n\n** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-22965",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-framework: RCE via Data Binding on JDK 9+"
              },
              "fullDescription": {
                "text": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22965",
              "help": {
                "text": "Vulnerability CVE-2022-22965\nSeverity: CRITICAL\nPackage: org.springframework:spring-webmvc\nFixed Version: 5.2.20, 5.3.18\nLink: [CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
                "markdown": "**Vulnerability CVE-2022-22965**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.springframework:spring-webmvc|5.2.20, 5.3.18|[CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)|\n\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "GHSA-36p3-wjmg-h94x",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Improper Neutralization of Special Elements used in an OS Command (\u0026#39;OS Command Injection\u0026#39;)"
              },
              "fullDescription": {
                "text": "Improper Neutralization of Special Elements used in an OS Command (\u0026#39;OS Command Injection\u0026#39;) in org.springframework.boot:spring-boot-starter-webflux."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
              "help": {
                "text": "Vulnerability GHSA-36p3-wjmg-h94x\nSeverity: UNKNOWN\nPackage: org.springframework:spring-core\nFixed Version: 5.2.20, 5.3.18\nLink: [GHSA-36p3-wjmg-h94x](https://github.com/advisories/GHSA-36p3-wjmg-h94x)\nImproper Neutralization of Special Elements used in an OS Command ('OS Command Injection') in org.springframework.boot:spring-boot-starter-webflux.",
                "markdown": "**Vulnerability GHSA-36p3-wjmg-h94x**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|org.springframework:spring-core|5.2.20, 5.3.18|[GHSA-36p3-wjmg-h94x](https://github.com/advisories/GHSA-36p3-wjmg-h94x)|\n\nImproper Neutralization of Special Elements used in an OS Command ('OS Command Injection') in org.springframework.boot:spring-boot-starter-webflux."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2021-22118",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-web: (re)creating the temporary storage directory could result in  a privilege escalation within WebFlux application"
              },
              "fullDescription": {
                "text": "In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22118",
              "help": {
                "text": "Vulnerability CVE-2021-22118\nSeverity: HIGH\nPackage: org.springframework:spring-core\nFixed Version: 5.2.15, 5.3.7\nLink: [CVE-2021-22118](https://avd.aquasec.com/nvd/cve-2021-22118)\nIn Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.",
                "markdown": "**Vulnerability CVE-2021-22118**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-core|5.2.15, 5.3.7|[CVE-2021-22118](https://avd.aquasec.com/nvd/cve-2021-22118)|\n\nIn Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-5421",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: RFD protection bypass via jsessionid"
              },
              "fullDescription": {
                "text": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-5421",
              "help": {
                "text": "Vulnerability CVE-2020-5421\nSeverity: MEDIUM\nPackage: org.springframework:spring-webmvc\nFixed Version: 4.3.29.RELEASE, 5.0.19.RELEASE, 5.1.18.RELEASE, 5.2.9.RELEASE\nLink: [CVE-2020-5421](https://avd.aquasec.com/nvd/cve-2020-5421)\nIn Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",
                "markdown": "**Vulnerability CVE-2020-5421**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-webmvc|4.3.29.RELEASE, 5.0.19.RELEASE, 5.1.18.RELEASE, 5.2.9.RELEASE|[CVE-2020-5421](https://avd.aquasec.com/nvd/cve-2020-5421)|\n\nIn Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-22060",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: Additional Log Injection in Spring Framework (follow-up to CVE-2021-22096)"
              },
              "fullDescription": {
                "text": "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22060",
              "help": {
                "text": "Vulnerability CVE-2021-22060\nSeverity: MEDIUM\nPackage: org.springframework:spring-core\nFixed Version: 5.3.14, 5.3.14\nLink: [CVE-2021-22060](https://avd.aquasec.com/nvd/cve-2021-22060)\nIn Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",
                "markdown": "**Vulnerability CVE-2021-22060**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-core|5.3.14, 5.3.14|[CVE-2021-22060](https://avd.aquasec.com/nvd/cve-2021-22060)|\n\nIn Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-22096",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: malicious input leads to insertion of additional log entries"
              },
              "fullDescription": {
                "text": "In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22096",
              "help": {
                "text": "Vulnerability CVE-2021-22096\nSeverity: MEDIUM\nPackage: org.springframework:spring-core\nFixed Version: 5.2.18, 5.3.11\nLink: [CVE-2021-22096](https://avd.aquasec.com/nvd/cve-2021-22096)\nIn Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.",
                "markdown": "**Vulnerability CVE-2021-22096**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-core|5.2.18, 5.3.11|[CVE-2021-22096](https://avd.aquasec.com/nvd/cve-2021-22096)|\n\nIn Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-22950",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-expression: Denial of service via specially crafted SpEL expression"
              },
              "fullDescription": {
                "text": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22950",
              "help": {
                "text": "Vulnerability CVE-2022-22950\nSeverity: MEDIUM\nPackage: org.springframework:spring-webmvc\nFixed Version: 5.2.20.RELEASE, 5.3.17\nLink: [CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)\nn Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
                "markdown": "**Vulnerability CVE-2022-22950**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-webmvc|5.2.20.RELEASE, 5.3.17|[CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)|\n\nn Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-22968",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Spring Framework: Data Binding Rules Vulnerability"
              },
              "fullDescription": {
                "text": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22968",
              "help": {
                "text": "Vulnerability CVE-2022-22968\nSeverity: MEDIUM\nPackage: org.springframework:spring-core\nFixed Version: 5.2.21, 5.3.19\nLink: [CVE-2022-22968](https://avd.aquasec.com/nvd/cve-2022-22968)\nIn Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
                "markdown": "**Vulnerability CVE-2022-22968**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-core|5.2.21, 5.3.19|[CVE-2022-22968](https://avd.aquasec.com/nvd/cve-2022-22968)|\n\nIn Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-22970",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: DoS via data binding to multipartFile or servlet part"
              },
              "fullDescription": {
                "text": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22970",
              "help": {
                "text": "Vulnerability CVE-2022-22970\nSeverity: MEDIUM\nPackage: org.springframework:spring-core\nFixed Version: 5.2.22.RELEASE, 5.3.20\nLink: [CVE-2022-22970](https://avd.aquasec.com/nvd/cve-2022-22970)\nIn spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",
                "markdown": "**Vulnerability CVE-2022-22970**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-core|5.2.22.RELEASE, 5.3.20|[CVE-2022-22970](https://avd.aquasec.com/nvd/cve-2022-22970)|\n\nIn spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-22971",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: DoS with STOMP over WebSocket"
              },
              "fullDescription": {
                "text": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22971",
              "help": {
                "text": "Vulnerability CVE-2022-22971\nSeverity: MEDIUM\nPackage: org.springframework:spring-core\nFixed Version: 5.2.22.RELEASE, 5.3.20\nLink: [CVE-2022-22971](https://avd.aquasec.com/nvd/cve-2022-22971)\nIn spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.",
                "markdown": "**Vulnerability CVE-2022-22971**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-core|5.2.22.RELEASE, 5.3.20|[CVE-2022-22971](https://avd.aquasec.com/nvd/cve-2022-22971)|\n\nIn spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2017-18640",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "snakeyaml: Billion laughs attack via alias feature"
              },
              "fullDescription": {
                "text": "The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-18640",
              "help": {
                "text": "Vulnerability CVE-2017-18640\nSeverity: HIGH\nPackage: org.yaml:snakeyaml\nFixed Version: 1.26\nLink: [CVE-2017-18640](https://avd.aquasec.com/nvd/cve-2017-18640)\nThe Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
                "markdown": "**Vulnerability CVE-2017-18640**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.yaml:snakeyaml|1.26|[CVE-2017-18640](https://avd.aquasec.com/nvd/cve-2017-18640)|\n\nThe Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-1471",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "SnakeYaml: Constructor Deserialization Remote Code Execution"
              },
              "fullDescription": {
                "text": "SnakeYaml\u0026#39;s Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml\u0026#39;s SafeConsturctor when parsing untrusted content to restrict deserialization."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1471",
              "help": {
                "text": "Vulnerability CVE-2022-1471\nSeverity: HIGH\nPackage: org.yaml:snakeyaml\nFixed Version: \nLink: [CVE-2022-1471](https://avd.aquasec.com/nvd/cve-2022-1471)\nSnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization.",
                "markdown": "**Vulnerability CVE-2022-1471**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.yaml:snakeyaml||[CVE-2022-1471](https://avd.aquasec.com/nvd/cve-2022-1471)|\n\nSnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-25857",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "snakeyaml: Denial of Service due to missing nested depth limitation for collections"
              },
              "fullDescription": {
                "text": "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25857",
              "help": {
                "text": "Vulnerability CVE-2022-25857\nSeverity: HIGH\nPackage: org.yaml:snakeyaml\nFixed Version: 1.31\nLink: [CVE-2022-25857](https://avd.aquasec.com/nvd/cve-2022-25857)\nThe package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.",
                "markdown": "**Vulnerability CVE-2022-25857**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.yaml:snakeyaml|1.31|[CVE-2022-25857](https://avd.aquasec.com/nvd/cve-2022-25857)|\n\nThe package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-38749",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "snakeyaml: Uncaught exception in org.yaml.snakeyaml.composer.Composer.composeSequenceNode"
              },
              "fullDescription": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-38749",
              "help": {
                "text": "Vulnerability CVE-2022-38749\nSeverity: MEDIUM\nPackage: org.yaml:snakeyaml\nFixed Version: 1.31\nLink: [CVE-2022-38749](https://avd.aquasec.com/nvd/cve-2022-38749)\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
                "markdown": "**Vulnerability CVE-2022-38749**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.yaml:snakeyaml|1.31|[CVE-2022-38749](https://avd.aquasec.com/nvd/cve-2022-38749)|\n\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-38750",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "snakeyaml: Uncaught exception in org.yaml.snakeyaml.constructor.BaseConstructor.constructObject"
              },
              "fullDescription": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-38750",
              "help": {
                "text": "Vulnerability CVE-2022-38750\nSeverity: MEDIUM\nPackage: org.yaml:snakeyaml\nFixed Version: 1.31\nLink: [CVE-2022-38750](https://avd.aquasec.com/nvd/cve-2022-38750)\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
                "markdown": "**Vulnerability CVE-2022-38750**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.yaml:snakeyaml|1.31|[CVE-2022-38750](https://avd.aquasec.com/nvd/cve-2022-38750)|\n\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-38751",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "snakeyaml: Uncaught exception in java.base/java.util.regex.Pattern$Ques.match"
              },
              "fullDescription": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-38751",
              "help": {
                "text": "Vulnerability CVE-2022-38751\nSeverity: MEDIUM\nPackage: org.yaml:snakeyaml\nFixed Version: 1.31\nLink: [CVE-2022-38751](https://avd.aquasec.com/nvd/cve-2022-38751)\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
                "markdown": "**Vulnerability CVE-2022-38751**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.yaml:snakeyaml|1.31|[CVE-2022-38751](https://avd.aquasec.com/nvd/cve-2022-38751)|\n\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-38752",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "snakeyaml: Uncaught exception in java.base/java.util.ArrayList.hashCode"
              },
              "fullDescription": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-38752",
              "help": {
                "text": "Vulnerability CVE-2022-38752\nSeverity: MEDIUM\nPackage: org.yaml:snakeyaml\nFixed Version: 1.32\nLink: [CVE-2022-38752](https://avd.aquasec.com/nvd/cve-2022-38752)\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",
                "markdown": "**Vulnerability CVE-2022-38752**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.yaml:snakeyaml|1.32|[CVE-2022-38752](https://avd.aquasec.com/nvd/cve-2022-38752)|\n\nUsing snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-41854",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "dev-java/snakeyaml: DoS via stack overflow"
              },
              "fullDescription": {
                "text": "Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41854",
              "help": {
                "text": "Vulnerability CVE-2022-41854\nSeverity: MEDIUM\nPackage: org.yaml:snakeyaml\nFixed Version: 1.32\nLink: [CVE-2022-41854](https://avd.aquasec.com/nvd/cve-2022-41854)\nThose using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",
                "markdown": "**Vulnerability CVE-2022-41854**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.yaml:snakeyaml|1.32|[CVE-2022-41854](https://avd.aquasec.com/nvd/cve-2022-41854)|\n\nThose using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "0.35.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2021-42550",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.2.3\nVulnerability CVE-2021-42550\nSeverity: MEDIUM\nFixed Version: 1.2.9\nLink: [CVE-2021-42550](https://avd.aquasec.com/nvd/cve-2021-42550)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: ch.qos.logback:logback-core@1.2.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-25649",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Package: com.fasterxml.jackson.core:jackson-databind\nInstalled Version: 2.10.2\nVulnerability CVE-2020-25649\nSeverity: HIGH\nFixed Version: 2.6.7.4, 2.9.10.7, 2.10.5.1\nLink: [CVE-2020-25649](https://avd.aquasec.com/nvd/cve-2020-25649)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.fasterxml.jackson.core:jackson-databind@2.10.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36518",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: com.fasterxml.jackson.core:jackson-databind\nInstalled Version: 2.10.2\nVulnerability CVE-2020-36518\nSeverity: HIGH\nFixed Version: 2.12.6.1, 2.13.2.1\nLink: [CVE-2020-36518](https://avd.aquasec.com/nvd/cve-2020-36518)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.fasterxml.jackson.core:jackson-databind@2.10.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42003",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: com.fasterxml.jackson.core:jackson-databind\nInstalled Version: 2.10.2\nVulnerability CVE-2022-42003\nSeverity: HIGH\nFixed Version: 2.12.7.1, 2.13.4.1\nLink: [CVE-2022-42003](https://avd.aquasec.com/nvd/cve-2022-42003)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.fasterxml.jackson.core:jackson-databind@2.10.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42004",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: com.fasterxml.jackson.core:jackson-databind\nInstalled Version: 2.10.2\nVulnerability CVE-2022-42004\nSeverity: HIGH\nFixed Version: 2.12.7.1, 2.13.4\nLink: [CVE-2022-42004](https://avd.aquasec.com/nvd/cve-2022-42004)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.fasterxml.jackson.core:jackson-databind@2.10.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10237",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Package: com.google.guava:guava\nInstalled Version: 20.0\nVulnerability CVE-2018-10237\nSeverity: MEDIUM\nFixed Version: 24.1.1-jre, 24.1.1-android\nLink: [CVE-2018-10237](https://avd.aquasec.com/nvd/cve-2018-10237)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.google.guava:guava@20.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8908",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Package: com.google.guava:guava\nInstalled Version: 20.0\nVulnerability CVE-2020-8908\nSeverity: LOW\nFixed Version: 30.0\nLink: [CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.google.guava:guava@20.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23463",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: com.h2database:h2\nInstalled Version: 1.4.200\nVulnerability CVE-2021-23463\nSeverity: CRITICAL\nFixed Version: 2.0.202\nLink: [CVE-2021-23463](https://avd.aquasec.com/nvd/cve-2021-23463)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.h2database:h2@1.4.200"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42392",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: com.h2database:h2\nInstalled Version: 1.4.200\nVulnerability CVE-2021-42392\nSeverity: CRITICAL\nFixed Version: 2.0.206\nLink: [CVE-2021-42392](https://avd.aquasec.com/nvd/cve-2021-42392)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.h2database:h2@1.4.200"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23221",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Package: com.h2database:h2\nInstalled Version: 1.4.200\nVulnerability CVE-2022-23221\nSeverity: CRITICAL\nFixed Version: 2.1.210\nLink: [CVE-2022-23221](https://avd.aquasec.com/nvd/cve-2022-23221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.h2database:h2@1.4.200"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-45868",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: com.h2database:h2\nInstalled Version: 1.4.200\nVulnerability CVE-2022-45868\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2022-45868](https://avd.aquasec.com/nvd/cve-2022-45868)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.h2database:h2@1.4.200"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-h376-j262-vhq6",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Package: com.h2database:h2\nInstalled Version: 1.4.200\nVulnerability GHSA-h376-j262-vhq6\nSeverity: UNKNOWN\nFixed Version: 2.0.206\nLink: [GHSA-h376-j262-vhq6](https://github.com/advisories/GHSA-h376-j262-vhq6)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: com.h2database:h2@1.4.200"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11612",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Package: io.netty:netty-codec\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2020-11612\nSeverity: HIGH\nFixed Version: 4.1.46.Final\nLink: [CVE-2020-11612](https://avd.aquasec.com/nvd/cve-2020-11612)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-codec@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37136",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "Package: io.netty:netty-codec\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2021-37136\nSeverity: HIGH\nFixed Version: 4.1.68.Final\nLink: [CVE-2021-37136](https://avd.aquasec.com/nvd/cve-2021-37136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-codec@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37137",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: io.netty:netty-codec\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2021-37137\nSeverity: HIGH\nFixed Version: 4.1.68.Final\nLink: [CVE-2021-37137](https://avd.aquasec.com/nvd/cve-2021-37137)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-codec@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21290",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: io.netty:netty-codec\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2021-21290\nSeverity: MEDIUM\nFixed Version: 4.1.59.Final\nLink: [CVE-2021-21290](https://avd.aquasec.com/nvd/cve-2021-21290)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-codec@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21409",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: io.netty:netty-codec\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2021-21409\nSeverity: MEDIUM\nFixed Version: 4.1.61.Final\nLink: [CVE-2021-21409](https://avd.aquasec.com/nvd/cve-2021-21409)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-codec@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24823",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: io.netty:netty-codec\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2022-24823\nSeverity: MEDIUM\nFixed Version: 4.1.77.Final\nLink: [CVE-2022-24823](https://avd.aquasec.com/nvd/cve-2022-24823)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-codec@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11612",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Package: io.netty:netty-handler\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2020-11612\nSeverity: HIGH\nFixed Version: 4.1.46\nLink: [CVE-2020-11612](https://avd.aquasec.com/nvd/cve-2020-11612)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-handler@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21290",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: io.netty:netty-handler\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2021-21290\nSeverity: MEDIUM\nFixed Version: 4.1.59.Final\nLink: [CVE-2021-21290](https://avd.aquasec.com/nvd/cve-2021-21290)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-handler@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21409",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: io.netty:netty-handler\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2021-21409\nSeverity: MEDIUM\nFixed Version: 4.1.61.Final\nLink: [CVE-2021-21409](https://avd.aquasec.com/nvd/cve-2021-21409)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-handler@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24823",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: io.netty:netty-handler\nInstalled Version: 4.1.45.Final\nVulnerability CVE-2022-24823\nSeverity: MEDIUM\nFixed Version: 4.1.77.Final\nLink: [CVE-2022-24823](https://avd.aquasec.com/nvd/cve-2022-24823)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.netty:netty-handler@4.1.45.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17495",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "Package: io.springfox:springfox-swagger-ui\nInstalled Version: 2.9.2\nVulnerability CVE-2019-17495\nSeverity: CRITICAL\nFixed Version: 2.10.0\nLink: [CVE-2019-17495](https://avd.aquasec.com/nvd/cve-2019-17495)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: io.springfox:springfox-swagger-ui@2.9.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15250",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: junit:junit\nInstalled Version: 4.12\nVulnerability CVE-2020-15250\nSeverity: MEDIUM\nFixed Version: 4.13.1\nLink: [CVE-2020-15250](https://avd.aquasec.com/nvd/cve-2020-15250)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: junit:junit@4.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-2934",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "Package: mysql:mysql-connector-java\nInstalled Version: 8.0.19\nVulnerability CVE-2020-2934\nSeverity: MEDIUM\nFixed Version: 5.1.49, 8.0.20\nLink: [CVE-2020-2934](https://avd.aquasec.com/nvd/cve-2020-2934)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: mysql:mysql-connector-java@8.0.19"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-2471",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "Package: mysql:mysql-connector-java\nInstalled Version: 8.0.19\nVulnerability CVE-2021-2471\nSeverity: MEDIUM\nFixed Version: 8.0.27\nLink: [CVE-2021-2471](https://avd.aquasec.com/nvd/cve-2021-2471)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: mysql:mysql-connector-java@8.0.19"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21363",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "Package: mysql:mysql-connector-java\nInstalled Version: 8.0.19\nVulnerability CVE-2022-21363\nSeverity: MEDIUM\nFixed Version: 8.0.28\nLink: [CVE-2022-21363](https://avd.aquasec.com/nvd/cve-2022-21363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: mysql:mysql-connector-java@8.0.19"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45105",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "Package: org.apache.logging.log4j:log4j-api\nInstalled Version: 2.12.1\nVulnerability CVE-2021-45105\nSeverity: MEDIUM\nFixed Version: 2.12.3, 2.17.0\nLink: [CVE-2021-45105](https://avd.aquasec.com/nvd/cve-2021-45105)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.logging.log4j:log4j-api@2.12.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13934",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-core\nInstalled Version: 9.0.31\nVulnerability CVE-2020-13934\nSeverity: HIGH\nFixed Version: 8.5.57, 9.0.37\nLink: [CVE-2020-13934](https://avd.aquasec.com/nvd/cve-2020-13934)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-core@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-17527",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-core\nInstalled Version: 9.0.31\nVulnerability CVE-2020-17527\nSeverity: HIGH\nFixed Version: 8.5.60, 9.0.40, 10.0.2\nLink: [CVE-2020-17527](https://avd.aquasec.com/nvd/cve-2020-17527)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-core@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9484",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-core\nInstalled Version: 9.0.31\nVulnerability CVE-2020-9484\nSeverity: HIGH\nFixed Version: 7.0.104, 8.5.55, 9.0.35, 10.0.0-M5\nLink: [CVE-2020-9484](https://avd.aquasec.com/nvd/cve-2020-9484)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-core@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25122",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-core\nInstalled Version: 9.0.31\nVulnerability CVE-2021-25122\nSeverity: HIGH\nFixed Version: 8.5.62, 9.0.42, 10.0.2\nLink: [CVE-2021-25122](https://avd.aquasec.com/nvd/cve-2021-25122)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-core@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25329",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-core\nInstalled Version: 9.0.31\nVulnerability CVE-2021-25329\nSeverity: HIGH\nFixed Version: 7.0.107, 8.5.61, 9.0.41\nLink: [CVE-2021-25329](https://avd.aquasec.com/nvd/cve-2021-25329)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-core@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-24122",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-core\nInstalled Version: 9.0.31\nVulnerability CVE-2021-24122\nSeverity: MEDIUM\nFixed Version: 10.0.0-M10, 9.0.40, 8.5.60, 7.0.107\nLink: [CVE-2021-24122](https://avd.aquasec.com/nvd/cve-2021-24122)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-core@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43980",
          "ruleIndex": 30,
          "level": "note",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-core\nInstalled Version: 9.0.31\nVulnerability CVE-2021-43980\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-43980](https://avd.aquasec.com/nvd/cve-2021-43980)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-core@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13935",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-websocket\nInstalled Version: 9.0.31\nVulnerability CVE-2020-13935\nSeverity: HIGH\nFixed Version: 7.0.105, 8.5.57, 9.0.37, 10.0.2\nLink: [CVE-2020-13935](https://avd.aquasec.com/nvd/cve-2020-13935)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-websocket@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-24122",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-websocket\nInstalled Version: 9.0.31\nVulnerability CVE-2021-24122\nSeverity: MEDIUM\nFixed Version: 10.0.0-M10, 9.0.40, 8.5.60, 7.0.107\nLink: [CVE-2021-24122](https://avd.aquasec.com/nvd/cve-2021-24122)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-websocket@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43980",
          "ruleIndex": 30,
          "level": "note",
          "message": {
            "text": "Package: org.apache.tomcat.embed:tomcat-embed-websocket\nInstalled Version: 9.0.31\nVulnerability CVE-2021-43980\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-43980](https://avd.aquasec.com/nvd/cve-2021-43980)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.apache.tomcat.embed:tomcat-embed-websocket@9.0.31"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15522",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "Package: org.bouncycastle:bcprov-jdk15on\nInstalled Version: 1.60\nVulnerability CVE-2020-15522\nSeverity: MEDIUM\nFixed Version: 1.66\nLink: [CVE-2020-15522](https://avd.aquasec.com/nvd/cve-2020-15522)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.bouncycastle:bcprov-jdk15on@1.60"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10683",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Package: org.dom4j:dom4j\nInstalled Version: 2.1.1\nVulnerability CVE-2020-10683\nSeverity: CRITICAL\nFixed Version: 2.0.3, 2.1.3\nLink: [CVE-2020-10683](https://avd.aquasec.com/nvd/cve-2020-10683)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.dom4j:dom4j@2.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10693",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "Package: org.hibernate.validator:hibernate-validator\nInstalled Version: 6.0.18.Final\nVulnerability CVE-2020-10693\nSeverity: MEDIUM\nFixed Version: 6.0.20.Final\nLink: [CVE-2020-10693](https://avd.aquasec.com/nvd/cve-2020-10693)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.hibernate.validator:hibernate-validator@6.0.18.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-25638",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "Package: org.hibernate:hibernate-core\nInstalled Version: 5.4.12.Final\nVulnerability CVE-2020-25638\nSeverity: HIGH\nFixed Version: 5.3.20.Final, 5.4.24.Final\nLink: [CVE-2020-25638](https://avd.aquasec.com/nvd/cve-2020-25638)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.hibernate:hibernate-core@5.4.12.Final"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27772",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.boot:spring-boot\nInstalled Version: 2.2.5.RELEASE\nVulnerability CVE-2022-27772\nSeverity: HIGH\nFixed Version: 2.2.11.RELEASE\nLink: [CVE-2022-27772](https://avd.aquasec.com/nvd/cve-2022-27772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework.boot:spring-boot@2.2.5.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22965",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.boot:spring-boot-starter-web\nInstalled Version: 2.2.5.RELEASE\nVulnerability CVE-2022-22965\nSeverity: CRITICAL\nFixed Version: 2.6.6, 2.5.12\nLink: [CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework.boot:spring-boot-starter-web@2.2.5.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-36p3-wjmg-h94x",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "Package: org.springframework.boot:spring-boot-starter-web\nInstalled Version: 2.2.5.RELEASE\nVulnerability GHSA-36p3-wjmg-h94x\nSeverity: UNKNOWN\nFixed Version: 2.5.12, 2.6.6\nLink: [GHSA-36p3-wjmg-h94x](https://github.com/advisories/GHSA-36p3-wjmg-h94x)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework.boot:spring-boot-starter-web@2.2.5.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22965",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-beans\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22965\nSeverity: CRITICAL\nFixed Version: 5.3.18, 5.2.20\nLink: [CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-beans@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-36p3-wjmg-h94x",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "Package: org.springframework:spring-beans\nInstalled Version: 5.2.4.RELEASE\nVulnerability GHSA-36p3-wjmg-h94x\nSeverity: UNKNOWN\nFixed Version: 5.2.20, 5.3.18\nLink: [GHSA-36p3-wjmg-h94x](https://github.com/advisories/GHSA-36p3-wjmg-h94x)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-beans@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22118",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2021-22118\nSeverity: HIGH\nFixed Version: 5.2.15, 5.3.7\nLink: [CVE-2021-22118](https://avd.aquasec.com/nvd/cve-2021-22118)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-5421",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2020-5421\nSeverity: MEDIUM\nFixed Version: 4.3.29.RELEASE, 5.0.19.RELEASE, 5.1.18.RELEASE, 5.2.9.RELEASE\nLink: [CVE-2020-5421](https://avd.aquasec.com/nvd/cve-2020-5421)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22060",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2021-22060\nSeverity: MEDIUM\nFixed Version: 5.3.14, 5.3.14\nLink: [CVE-2021-22060](https://avd.aquasec.com/nvd/cve-2021-22060)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22096",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2021-22096\nSeverity: MEDIUM\nFixed Version: 5.2.18, 5.3.11\nLink: [CVE-2021-22096](https://avd.aquasec.com/nvd/cve-2021-22096)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22950",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22950\nSeverity: MEDIUM\nFixed Version: 5.2.20.RELEASE, 5.3.17\nLink: [CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22968",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22968\nSeverity: MEDIUM\nFixed Version: 5.2.21, 5.3.19\nLink: [CVE-2022-22968](https://avd.aquasec.com/nvd/cve-2022-22968)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22970",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22970\nSeverity: MEDIUM\nFixed Version: 5.2.22.RELEASE, 5.3.20\nLink: [CVE-2022-22970](https://avd.aquasec.com/nvd/cve-2022-22970)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22971",
          "ruleIndex": 46,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22971\nSeverity: MEDIUM\nFixed Version: 5.2.22.RELEASE, 5.3.20\nLink: [CVE-2022-22971](https://avd.aquasec.com/nvd/cve-2022-22971)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-36p3-wjmg-h94x",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 5.2.4.RELEASE\nVulnerability GHSA-36p3-wjmg-h94x\nSeverity: UNKNOWN\nFixed Version: 5.2.20, 5.3.18\nLink: [GHSA-36p3-wjmg-h94x](https://github.com/advisories/GHSA-36p3-wjmg-h94x)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-core@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22950",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-expression\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22950\nSeverity: MEDIUM\nFixed Version: 5.2.20, 5.3.16\nLink: [CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-expression@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-5421",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-oxm\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2020-5421\nSeverity: MEDIUM\nFixed Version: 4.3.29.RELEASE, 5.0.19.RELEASE, 5.1.18.RELEASE, 5.2.9.RELEASE\nLink: [CVE-2020-5421](https://avd.aquasec.com/nvd/cve-2020-5421)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-oxm@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-5421",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-web\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2020-5421\nSeverity: MEDIUM\nFixed Version: 4.3.29.RELEASE, 5.0.19.RELEASE, 5.1.18.RELEASE, 5.2.9.RELEASE\nLink: [CVE-2020-5421](https://avd.aquasec.com/nvd/cve-2020-5421)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-web@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22965",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-webmvc\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22965\nSeverity: CRITICAL\nFixed Version: 5.2.20, 5.3.18\nLink: [CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-webmvc@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-5421",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-webmvc\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2020-5421\nSeverity: MEDIUM\nFixed Version: 4.3.29.RELEASE, 5.0.19.RELEASE, 5.1.18.RELEASE, 5.2.9.RELEASE\nLink: [CVE-2020-5421](https://avd.aquasec.com/nvd/cve-2020-5421)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-webmvc@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22950",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-webmvc\nInstalled Version: 5.2.4.RELEASE\nVulnerability CVE-2022-22950\nSeverity: MEDIUM\nFixed Version: 5.2.20.RELEASE, 5.3.17\nLink: [CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.springframework:spring-webmvc@5.2.4.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18640",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2017-18640\nSeverity: HIGH\nFixed Version: 1.26\nLink: [CVE-2017-18640](https://avd.aquasec.com/nvd/cve-2017-18640)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1471",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2022-1471\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2022-1471](https://avd.aquasec.com/nvd/cve-2022-1471)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25857",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2022-25857\nSeverity: HIGH\nFixed Version: 1.31\nLink: [CVE-2022-25857](https://avd.aquasec.com/nvd/cve-2022-25857)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38749",
          "ruleIndex": 50,
          "level": "warning",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2022-38749\nSeverity: MEDIUM\nFixed Version: 1.31\nLink: [CVE-2022-38749](https://avd.aquasec.com/nvd/cve-2022-38749)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38750",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2022-38750\nSeverity: MEDIUM\nFixed Version: 1.31\nLink: [CVE-2022-38750](https://avd.aquasec.com/nvd/cve-2022-38750)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38751",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2022-38751\nSeverity: MEDIUM\nFixed Version: 1.31\nLink: [CVE-2022-38751](https://avd.aquasec.com/nvd/cve-2022-38751)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38752",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2022-38752\nSeverity: MEDIUM\nFixed Version: 1.32\nLink: [CVE-2022-38752](https://avd.aquasec.com/nvd/cve-2022-38752)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41854",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "Package: org.yaml:snakeyaml\nInstalled Version: 1.25\nVulnerability CVE-2022-41854\nSeverity: MEDIUM\nFixed Version: 1.32\nLink: [CVE-2022-41854](https://avd.aquasec.com/nvd/cve-2022-41854)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/libs/test-async-0.0.1.jar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/libs/test-async-0.0.1.jar: org.yaml:snakeyaml@1.25"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      }
    }
  ]
}